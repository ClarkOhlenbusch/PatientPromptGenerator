### 1  Dynamic variables in prompts

* **Syntax** – Wrap the placeholder in **double curly braces**: `{{patientName}}`, `{{condition}}`, `{{vitals}}`, etc. ([Vapi][1])
* **Templating engine** – Vapi pipes every prompt through **LiquidJS**, so you can also use filters:

  ````liquid
  Hello {{name}} – today is {{"now" | date: "%B %d, %Y"}}.
  ``` :contentReference[oaicite:1]{index=1}  
  ````

---

### 2  Passing variable values at call-time

Provide a `variableValues` map inside **assistantOverrides** (or in the top-level `assistant` object when you build a transient assistant).

```json
{
  "assistantId": "ASSISTANT_ID",
  "assistantOverrides": {
    "variableValues": {
      "name": "John Doe",
      "condition": "CHF",
      "vitals": "BP 130/85 • HR 72"
    }
  },
  "customer": { "number": "+1XXXXXXXXXX" },
  "phoneNumberId": "PHONE_ID"
}
```

The keys (`name`, `condition`, `vitals`) **must exactly match** the placeholders you used in `{{…}}`; there’s no required prefix or pattern. ([Vapi][2], [Vapi][1])

---

### 3  Webhook (Server URL) configuration

Vapi sends call-lifecycle events—including the end-of-call summary—to the **Server URL** that has highest priority:

1. **Function level** → `assistant.model.functions[].serverUrl`
2. **Assistant level** → `assistant.serverUrl`
3. **Phone-number level** → `phoneNumber.serverUrl`
4. **Account-wide**

You can set or update the URL with a regular **PATCH /assistant/{id}** (or equivalent phone-number / org update). ([Vapi][3])

---

### 4  assistantOverrides schema (full)

```jsonc
{
  "assistantOverrides": {
    // swap the TTS voice just for this call
    "voice": { "provider": "azure", "voiceId": "en-US-JennyNeural" },

    // change STT model on the fly
    "transcriber": { "provider": "deepgram", "model": "nova-2" },

    // replace any {{variable}} tokens
    "variableValues": { "name": "Alice" },

    // attach arbitrary metadata (returned later)
    "metadata": { "triageId": "TRI-45721" }
  }
}
```

All keys are optional; omit any attribute you don’t want to override. ([Vapi][2])

---

### 5  Call-level metadata round-trip

When you **POST /call** or **/call/phone** you may embed a free-form object:

```json
"metadata": { "triageId": "TRI-45721", "nurseId": "N-93" }
```

Vapi echoes this object back in:

* the **GET /call/{id}** response, and
* the **server-message** payload you receive at `call-end` (type =`"end-of-call-report"`).

That lets you correlate the webhook with internal records. ([Vapi][4], [Vapi][5])

---

### 6  Updating or fetching an assistant

* **Fetch current settings** `GET /assistant/{assistantId}` returns the full config object (voice, prompts, serverUrl, etc.).

[1]: https://docs.vapi.ai/assistants/dynamic-variables "Variables | Vapi"
[2]: https://docs.vapi.ai/sdk/web "Web SDK | Vapi"
[3]: https://docs.vapi.ai/server-url/setting-server-urls "Setting server URLs | Vapi"
[4]: https://docs.vapi.ai/api-reference/calls/create?utm_source=chatgpt.com "Create Call - Vapi"
[5]: https://docs.vapi.ai/api-reference/calls/get?utm_source=chatgpt.com "Get Call - Vapi"
