We are going to make some large changes to the code. this is going to be an overview of the general change goals and what we are trying to create.

Project Specification: AI Voice Call Integration for PatientPromptGenerator


Overview
Extend the existing PatientPromptGenerator platform to trigger AI-driven phone calls to patients using the Vapi Voice API. The AI agent will conduct follow-up conversations based on patient triage biometric data, recent conversations and through the dialogue with the patient. Each call will be automatically logged generating a concise call summary for the nurse to review—all within the current React/TypeScript + Node/Express/Drizzle stack.

Key Objectives
Outbound Voice Calls: Add a “Call Patient” action in the patient’s triage view. On click, the backend invokes Vapi’s /call/phone endpoint with a transient AI assistant configured via our stored prompt.
Prompt Sandbox UI: Create an admin page to edit the AI agent’s system prompt, model settings, and (optional) voice selection. Store these settings in the database so every call uses the latest configuration.
Call Summary Retrieval: Configure a webhook endpoint to receive Vapi’s call-completion event, fetch the AI-generated summary via Vapi’s analysis API, and save it to a new calls table.
UI Display of Summaries: Add a “Call History” panel in the patient profile that lists each call’s date, status, and AI summary for quick nurse review.

Technical Details
Backend


New Routes:


POST /api/calls → initiate a call for a given patient ID
POST /api/vapi/callback → webhook for Vapi call events
GET /api/patients/:id/calls → retrieve call history
GET/PUT /api/voice-assistant-config → manage AI prompt settings
Database:


calls table: logs patient calls (vapi_call_id, status, summary)
settings (or new config table): stores the AI agent’s prompt and preferences
Vapi Integration: Environment vars for VAPI_API_KEY and VAPI_NUMBER_ID; use a transient assistant payload to send the latest prompt on each call.
Frontend


CallPatientButton: Triggers POST /api/calls, shows “Calling…” feedback.
CallSummaryPanel: Fetches and renders call history (GET /api/patients/:id/calls).
VoiceAgentConfigPage: Admin-only form to edit and save the system prompt and model/voice options.

Next Steps: 
1 - create the AI agent in the Voice API tool, then test and validate the flow.
2 - Implement a way to input a patient's phone number, and then have the Agent initiate a call to the patient. The call can be time limited. ( e.g. conversations no longer than 15 min. )
3 - Develop a way to feed the Agent the Triage reports, medical condition (e.g. CHF )  for enhanced context for the conversation. 
For each patient, there should be a way to add personal information for each patient like: John loves to talk about travelling, his wife Betty who passed away recently, his children Clark and Tomas 
All this information can be embedded in  a prompt editing field to allow clinician to personalize the content of the conversations like:
“ check in with patient, how are they feeling, take it from there  
Confirm with health data, suggest  
Talk about their day, if they want to talk about a specific topic ( news, sport, culture, family, hobbies&activities  )
4 - Have the call summarized and have the summary of the call displayed on the UI for the user to interact with. Summary analyzes mood, any speech anomalies, erratic behavior etc.  In general, there should be a prompt editing field to allow the clinician to tailor the summary to their needs.  5 - Use the Voice API to allow for prompt editing
6 - UI Window additions:
Main page: add AI Companion Calls 
Make Prompt Editing #2 in sequence, AI Triage #3 and AI Companion #4, Monthly Reports #5
In Prompt editing page  all prompts should be: Triage prompts, Companion Prompts, monthly reports  
7 (If time allows) - Conversation HistoryStore conversations in the database and show  them ( in script form ) so that the AI Agent can have context of previous interactions with the patients and follow up on key details of the last conversations and the nurse can analyze herself what has been said. 


Before we begin this project, we need to make a plan. this plan should attempt to break down each goal into a measuerable outcome so that we can test it. before continuing. I also know that there is alot of info here that you migh not have access to so I want you to ask me every question that you might have before continuing.